
(defn range (n)
	(set index 0)
	(set lst (0))
	
	(loop (< index (- n 1))
		(++ index)
		(append index lst))
	
	lst)
	
(defn reverse (lst)
	(set size 0)
	(set index 0)
	
	(iterate value lst (++ size))
		
	(loop (< index (/ 2 size))
				
		(set prev (nth index lst))
		(set (nth index lst) (nth (- size (+ index 1)) lst))
		(set(nth (- size (+ index 1)) lst) prev)
		
		(++ index))
	
	lst)
	


(set dict (create-dict
	(key value)
	(key1 value1)
	
))

dict -> ('my-key 10) -> ('my-second-key 20)
	