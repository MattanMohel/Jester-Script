(defn when (cond result)
	(if cond
		(eval result)
		nil))
		
(println (when true (print 1)))  # prints '11'
(println (when false (print 1))) # prints '1nil'

(println (when true (quote (print 1))))  # prints just '1'
(println (when false (quote (print 1)))) # prints just 'nil'

# happens as unless '(print 1)' is quoted, it evaluates, 
# prints one, and returns one again if the cond is met
